object Main
	methods
		def main()
			var sOut, array, a, closure, b, tr, fa, result
			result <- true
			a <- Main2.new
			a.closureTest()
			sOut <- SystemIO.new
			closure <- {
				var t <- "A"
				sOut.out(t)
			}
			result.ifTrue(closure)
:-)			test closures
			sOut.out(a:accessor.call())
			a:setter.call(20)
			sOut.out(a:accessor.call())
:-)
:-)			array <- Array.new
			a <- "10"
			b <- 5

			result <- a.+(b)
			sOut.out(result)

			a <- a.toNumber()
			result <- a.+(b)
			sOut.out(result)

:-)			a <- 5
:-)			array.push(a)
:-)			a <- 6
:-)	        array.push(a)
:-)            a <- 3
:-)            array.push(a)
:-)
:-)			tr <- {
:-)				var r
:-)                r <- true
:-)                r
:-)			}
:-)
:-)			fa <- { a |
:-)				var r
:-)                r <- false
:-)                r
:-)			}
:-)
:-)            closure <- { item |
:-)                var c, b
:-)                b <- 7
:-)                c <- 2
:-)                item <- item.+(c)
:-)                c <- item.<=(b)
:-)                c.ifTrue(tr)
:-)                c.ifFalse(fa)
:-)            }
:-)
:-)            a <- array.select(closure)
:-)
:-)            sOut.out(array)
:-)            sOut.out(a)

:-)			b <- "ahoj"
:-)            a <- array.collect(b)
:-)            sOut.out(a)
		end
	endMethods
endClass