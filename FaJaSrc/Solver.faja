object Solver
	methods
		def solve(instance)

            var best <- null
            var pow <- 2.**(instance:variablesCount)

            var closure <- { i |
                var helpResult <- Result.new
                helpResult:evaluation <- Array.new

                var numerator <- i
                var cl1 <- { j |
                    var cl2 <- {
                        helpResult:evaluation.add(j,true)
	                }
                   numerator.%(2).==(1).ifTrue(cl2)
                   numerator <- numerator./(2)
               }
                instance:variablesCount.times(cl1)

                helpResult:weight <- instance.summaryWeight(helpResult)

				var condition <- best.isNull().and(instance.isValid(helpResult))
				var cl3 <- {
                   best <- helpResult
                   best:valid <- instance.isValid(best)
                }
                condition.ifTrue(cl3)

				condition <- best.isNull().not().and(instance.isValid(helpResult)).and(helpResult:weight.>(best:weight))
				var cl4 <- {
	               best <- helpResult
	               best:valid <- instance.isValid(best)
	            }
                condition.ifTrue(cl4)
            }
            
            pow.times(closure)
		end
	endMethods
endClass